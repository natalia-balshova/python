class Cell:
    def __init__(self, n):
        self.number = n

    def __add__(self, other):
        result = Cell(self.number + other.number)
        return result

    def __sub__(self, other):
        result = Cell(self.number - other.number)
        return result if self.number - other.number > 0 else '–û—à–∏–±–∫–∞: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Ç–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0!'

    def __mul__(self, other):
        result = Cell(self.number * other.number)
        return result

    def __truediv__(self, other):
        result = Cell(self.number // other.number)
        return result

    # —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ __floordiv__(self, other)
    def __floordiv__(self, other):
        result = Cell(self.number // other.number)
        return result

    def __str__(self):
        return f'{self.number}'


    def make_order(self, n):
        self.n = n
        return '\n'.join([f'{"ü¶ù" * self.n}' for el in range(self.number // self.n)])+f'\n{"ü¶ù" * (self.number % self.n)}'


a = Cell(21)
b = Cell(10)
print(f'–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —è—á–µ–µ–∫: {a + b}')
print(f'–£–º–µ–Ω—å—à–µ–Ω–∏–µ —è—á–µ–µ–∫: {a - b}')
print(f'–£–º–Ω–æ–∂–µ–Ω–∏–µ —è—á–µ–µ–∫: {a * b}')
print(f'–î–µ–ª–µ–Ω–∏–µ —è—á–µ–µ–∫: {a / b}')
print(f'–î–µ–ª–µ–Ω–∏–µ —è—á–µ–µ–∫ (–≤—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–±): {a / b}')
print(a.make_order(5))
print()
print(b.make_order(3))
